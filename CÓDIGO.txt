#include <stdio.h>
#include <string.h>

// Definição da estrutura para armazenar nome e idade
typedef struct {
    char nome[50];
    int idade;
} Pessoa;

// Função para ordenar as pessoas por idade
void ordenarPorIdade(Pessoa pessoas[], int n) {
    Pessoa temp;
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (pessoas[i].idade > pessoas[j].idade) {
                temp = pessoas[i];
                pessoas[i] = pessoas[j];
                pessoas[j] = temp;
            }
        }
    }
}

int main() {
    // Declaração do array de estruturas
    Pessoa pessoas[4];

    // Entrada dos dados
    for (int i = 0; i < 4; i++) {
        printf("Digite o nome da pessoa %d: ", i + 1);
        fgets(pessoas[i].nome, sizeof(pessoas[i].nome), stdin);
        pessoas[i].nome[strcspn(pessoas[i].nome, "\n")] = '\0'; // Remove o newline

        printf("Digite a idade da pessoa %d: ", i + 1);
        scanf("%d", &pessoas[i].idade);
        getchar(); // Limpa o buffer do teclado
    }

    // Inicializa a pessoa mais nova
    Pessoa mais_nova = pessoas[0];

    // Determina a pessoa mais nova
    for (int i = 1; i < 4; i++) {
        if (pessoas[i].idade < mais_nova.idade) {
            mais_nova = pessoas[i];
        }
    }

    // Ordena as pessoas por idade
    ordenarPorIdade(pessoas, 4);

    // Exibe a pessoa mais nova
    printf("A pessoa mais nova é %s com %d anos.\n", mais_nova.nome, mais_nova.idade);

    // Exibe as pessoas em ordem crescente de idade
    printf("\nLista de pessoas em ordem crescente de idade:\n");
    for (int i = 0; i < 4; i++) {
        printf("%s, %d anos\n", pessoas[i].nome, pessoas[i].idade);
    }

    return 0;
}
